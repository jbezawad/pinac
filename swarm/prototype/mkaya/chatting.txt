////////////////////
//
//Mehmet KAYA
//
//this is chatting prototype codes for a computer named Comp1
//////////////////////

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Net.Sockets;
using System.Net;
using System.IO;
using System.Threading;

namespace Comp1
{
    public partial class Form1 : Form
    {
        Socket clientSocket;
        EndPoint epServer; 
        byte[] byteData = new byte[1024];
        Socket serverSocket;
        public Form1()
        {
            InitializeComponent();
        }
       
        public void Listener()
        {
            while (true)
            {
                CheckForIllegalCrossThreadCalls = false;               
                IPEndPoint ipeSender = new IPEndPoint(IPAddress.Any, 0);
                //The epSender identifies the incoming clients
                EndPoint epSender = (EndPoint)ipeSender;
                //Start receiving data
                try
                {
                    serverSocket.BeginReceiveFrom(byteData, 0, byteData.Length,
                        SocketFlags.None, ref epSender, new AsyncCallback(Receive), epSender);
                }
                catch { }
            }
        }
        private void Receive(IAsyncResult ar)
        {
                IPEndPoint ipeSender = new IPEndPoint(IPAddress.Any, 0);
                EndPoint epSender = (EndPoint)ipeSender;
                serverSocket.EndReceiveFrom(ar, ref epSender);
                String msg = Encoding.ASCII.GetString(byteData);
                listBox1.Items.Add(msg.ToString());//msg.Substring(msg.IndexOf('<') + 1, msg.IndexOf('>') - msg.IndexOf('<') -1)+msg.Substring(msg.IndexOf(':'));
                Array.Clear(byteData, 0, byteData.Length);
        }       
        private void OnSend(IAsyncResult ar)
        {
            clientSocket.EndSend(ar);
        }
        private void button1_Click(object sender, EventArgs e)
        {
            clientSocket = new Socket(AddressFamily.InterNetwork,
                   SocketType.Dgram, ProtocolType.Udp);
            if (checkBox1.Checked)
            {
                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Parse("127.0.0.1"), 4040);
                epServer = (EndPoint)ipEndPoint;
                string msg = "<Comp1>" + textBox1.Text;
                byte[] byteData = Encoding.UTF8.GetBytes(msg.ToCharArray());
                clientSocket.BeginSendTo(byteData, 0, byteData.Length, SocketFlags.None, epServer, new AsyncCallback(OnSend), null);
            }
            if (checkBox2.Checked)
            {
                IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Parse("127.0.0.1"), 4080);
                epServer = (EndPoint)ipEndPoint;
                string msg = "<Comp1>" + textBox1.Text;
                byte[] byteData = Encoding.UTF8.GetBytes(msg.ToCharArray());
                clientSocket.BeginSendTo(byteData, 0, byteData.Length, SocketFlags.None, epServer, new AsyncCallback(OnSend), null);
            }
        }

        private void Form1_Load_1(object sender, EventArgs e)
        {
            serverSocket = new Socket(AddressFamily.InterNetwork,
                       SocketType.Dgram, ProtocolType.Udp);
            //Assign the any IP of the machine and listen on port number 4000
            IPEndPoint ipEndPoint = new IPEndPoint(IPAddress.Any, 4000);
            //Bind this address to the server          
                serverSocket.Bind(ipEndPoint);
            Thread thrd = new Thread(new ThreadStart(Listener));
            thrd.Start();
        }

        

        
    }   
}